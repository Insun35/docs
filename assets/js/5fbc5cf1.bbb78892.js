"use strict";(self.webpackChunkinterrep_docs=self.webpackChunkinterrep_docs||[]).push([[207],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=p(n),d=a,h=m["".concat(l,".").concat(d)]||m[d]||c[d]||i;return n?r.createElement(h,o(o({ref:t},u),{},{components:n})):r.createElement(h,o({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7480:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return u},default:function(){return m}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],s={sidebar_position:5},l="API",p={unversionedId:"api",id:"api",isDocsHomePage:!1,title:"API",description:"Providers",source:"@site/docs/api.md",sourceDirName:".",slug:"/api",permalink:"/api",editUrl:"https://github.com/InterRep/docs/edit/main/docs/api.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"InterRep groups",permalink:"/tutorials/interrep-groups"},next:{title:"Subgraph",permalink:"/subgraph"}},u=[{value:"Providers",id:"providers",children:[]},{value:"Groups",id:"groups",children:[]},{value:"Trees",id:"trees",children:[]}],c={toc:u};function m(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"api"},"API"),(0,i.kt)("h3",{id:"providers"},"Providers"),(0,i.kt)("p",null,"Providers are the services that allow InterRep to obtain identities that meet certain criteria (e.g. group membership, social reputation, or ownership of tokens or emails)."),(0,i.kt)("h4",{id:"apiproviders"},(0,i.kt)("inlineCode",{parentName:"h4"},"/api/providers")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"GET")," - Returns all the InterRep supported providers."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Shell"',title:'"Shell"'},"curl https://kovan.interrep.link/api/providers\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Response"',title:'"Response"'},'{ "data": ["twitter", "github", "reddit", "poap", "email", "telegram"] }\n')),(0,i.kt)("h4",{id:"apiprovidersprovideridentitycommitment"},(0,i.kt)("inlineCode",{parentName:"h4"},"/api/providers/:provider/:identityCommitment")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"GET")," - Returns true if an identity commitment belongs to any provider group."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Shell"',title:'"Shell"'},"curl https://kovan.interrep.link/api/providers/github/5389624958916554855745402699919973897274778066321592214684792070525465486554\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Response"',title:'"Response"'},'{ "data": true }\n')),(0,i.kt)("h3",{id:"groups"},"Groups"),(0,i.kt)("p",null,"Groups contain the identity commitments of users who decide to join them. You can add or delete an identity commitment from a group, and each group has a size (i.e. the number of active identity commitments) and the root hash of the group tree."),(0,i.kt)("h4",{id:"apigroups"},(0,i.kt)("inlineCode",{parentName:"h4"},"/api/groups")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"GET")," - Returns all the InterRep groups."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Shell"',title:'"Shell"'},"curl https://kovan.interrep.link/api/groups\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Response"',title:'"Response"'},'{\n    "data": [\n        {\n            "provider": "twitter",\n            "name": "gold",\n            "rootHash": "19217088683336594659449020493828377907203207941212636669271704950158751593251",\n            "size": 0\n        },\n        {\n            "provider": "poap",\n            "name": "devcon5",\n            "rootHash": "19217088683336594659449020493828377907203207941212636669271704950158751593251",\n            "size": 0\n        },\n        {\n            "provider": "telegram",\n            "name": "-1001396261340",\n            "rootHash": "19217088683336594659449020493828377907203207941212636669271704950158751593251",\n            "size": 0\n        },\n        {\n            "provider": "email",\n            "name": "hotmail",\n            "rootHash": "19217088683336594659449020493828377907203207941212636669271704950158751593251",\n            "size": 0\n        },\n        ...\n    ]\n}\n')),(0,i.kt)("h4",{id:"apigroupsprovidername"},(0,i.kt)("inlineCode",{parentName:"h4"},"/api/groups/:provider/:name")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"GET")," - Returns a specific InterRep group."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Shell"',title:'"Shell"'},"curl https://kovan.interrep.link/api/groups/github/gold\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Response"',title:'"Response"'},'{\n    "data": {\n        "provider": "github",\n        "name": "gold",\n        "rootHash": "3539596833905557328479676245499052267688962849195984401151716846778908697643",\n        "size": 1\n    }\n}\n')),(0,i.kt)("h4",{id:"apigroupsprovidernameidentitycommitment"},(0,i.kt)("inlineCode",{parentName:"h4"},"/api/groups/:provider/:name/:identityCommitment")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"GET")," - Returns true if an identity commitment belongs to a group."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Shell"',title:'"Shell"'},"curl https://kovan.interrep.link/api/groups/github/gold/5389624958916554855745402699919973897274778066321592214684792070525465486554\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Response"',title:'"Response"'},'{ "data": true }\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"POST")," - Adds an identity commitment to a group and return true (for OAuth groups only). Your domain must be whitelisted to use this API."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Shell"',title:'"Shell"'},'curl -X POST -H "Authorization: token OAUTH-TOKEN" \\\nhttps://kovan.interrep.link/api/groups/github/gold/5389624958916554855745402699919973897274778066321592214684792070525465486554\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Response"',title:'"Response"'},'{ "data": true }\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"DELETE")," - Deletes an identity commitment from a group and return true (for OAuth groups only). Your domain must be whitelisted to use this API."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Shell"',title:'"Shell"'},'curl -X DELETE -H "Authorization: token OAUTH-TOKEN" \\\nhttps://kovan.interrep.link/api/groups/github/gold/5389624958916554855745402699919973897274778066321592214684792070525465486554\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Response"',title:'"Response"'},'{ "data": true }\n')),(0,i.kt)("h4",{id:"apigroupsprovidernameidentitycommitmentproof"},(0,i.kt)("inlineCode",{parentName:"h4"},"/api/groups/:provider/:name/:identityCommitment/proof")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"GET")," - Returns a Merkle tree proof."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Shell"',title:'"Shell"'},"curl https://kovan.interrep.link/api/groups/github/gold/5389624958916554855745402699919973897274778066321592214684792070525465486554/proof\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Response"',title:'"Response"'},'{\n    "data": {\n        "siblingNodes": [\n            "0",\n            "14744269619966411208579211824598458697587494354926760081771325075741142829156",\n            "7423237065226347324353380772367382631490014989348495481811164164159255474657",\n            "11286972368698509976183087595462810875513684078608517520839298933882497716792",\n            "3607627140608796879659380071776844901612302623152076817094415224584923813162",\n            "19712377064642672829441595136074946683621277828620209496774504837737984048981",\n            "20775607673010627194014556968476266066927294572720319469184847051418138353016",\n            "3396914609616007258851405644437304192397291162432396347162513310381425243293",\n            "21551820661461729022865262380882070649935529853313286572328683688269863701601",\n            "6573136701248752079028194407151022595060682063033565181951145966236778420039",\n            "12413880268183407374852357075976609371175688755676981206018884971008854919922",\n            "14271763308400718165336499097156975241954733520325982997864342600795471836726",\n            "20066985985293572387227381049700832219069292839614107140851619262827735677018",\n            "9394776414966240069580838672673694685292165040808226440647796406499139370960",\n            "11331146992410411304059858900317123658895005918277453009197229807340014528524",\n            "15819538789928229930262697811477882737253464456578333862691129291651619515538"\n        ],\n        "path": [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        "root": "3539596833905557328479676245499052267688962849195984401151716846778908697643"\n    }\n}\n')),(0,i.kt)("h3",{id:"trees"},"Trees"),(0,i.kt)("p",null,"Merkle trees are used as a data structure for groups. Each group has a tree, which is created when the first identity commitment is added. Identity commitments are therefore the leaves of the Merkle trees."),(0,i.kt)("h4",{id:"apitreesroothash"},(0,i.kt)("inlineCode",{parentName:"h4"},"/api/trees/:rootHash")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"GET")," - Returns the leaves of a tree."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Shell"',title:'"Shell"'},"curl https://kovan.interrep.link/api/trees/3539596833905557328479676245499052267688962849195984401151716846778908697643?limit=2\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Response"',title:'"Response"'},'{ "data": ["0", "15227719113467049976699670018631375748328892669189551254396131971022633202277"] }\n')),(0,i.kt)("h4",{id:"apitreesroothashleafhash"},(0,i.kt)("inlineCode",{parentName:"h4"},"/api/trees/:rootHash/:leafHash")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"GET")," - Returns true if a leaf belongs to a tree."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Shell"',title:'"Shell"'},"curl https://kovan.interrep.link/api/trees/3539596833905557328479676245499052267688962849195984401151716846778908697643/15227719113467049976699670018631375748328892669189551254396131971022633202277\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Response"',title:'"Response"'},'{ "data": true }\n')),(0,i.kt)("h4",{id:"apitreesbatches"},(0,i.kt)("inlineCode",{parentName:"h4"},"/api/trees/batches")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"GET")," - Returns all the root batches."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Shell"',title:'"Shell"'},"curl https://kovan.interrep.link/api/trees/batches\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Response"',title:'"Response"'},'{\n    "data": [\n        {\n            "group": { "provider": "github", "name": "gold" },\n            "rootHashes": ["14273848199791178467311820318933280591305571798471599149384455313172966875782"],\n            "transaction": {\n                "hash": "0x1dec16b1c76a0a1fc9b4c7c898ae0ba72f496868fb7d2fe447fefe5eeaf676c1",\n                "blockNumber": 10\n            }\n        },\n        {\n            "group": { "provider": "github", "name": "gold" },\n            "rootHashes": [\n                "19217088683336594659449020493828377907203207941212636669271704950158751593251",\n                "3539596833905557328479676245499052267688962849195984401151716846778908697643"\n            ],\n            "transaction": {\n                "hash": "0xd1890bb9bda0adc650aefe974ccfe26665fe471c8a9f5306591bcc0c71088ced",\n                "blockNumber": 11\n            }\n        }\n    ]\n}\n')),(0,i.kt)("h4",{id:"apitreesbatchesroothash"},(0,i.kt)("inlineCode",{parentName:"h4"},"/api/trees/batches/:rootHash")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"GET")," - Returns the batch to which a root hash belongs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Shell"',title:'"Shell"'},"curl https://kovan.interrep.link/api/trees/batches/3539596833905557328479676245499052267688962849195984401151716846778908697643\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Response"',title:'"Response"'},'{\n    "data": {\n        "group": { "provider": "github", "name": "gold" },\n        "rootHashes": [\n            "19217088683336594659449020493828377907203207941212636669271704950158751593251",\n            "3539596833905557328479676245499052267688962849195984401151716846778908697643"\n        ],\n        "transaction": {\n            "hash": "0xd1890bb9bda0adc650aefe974ccfe26665fe471c8a9f5306591bcc0c71088ced",\n            "blockNumber": 11\n        }\n    }\n}\n')))}m.isMDXComponent=!0}}]);